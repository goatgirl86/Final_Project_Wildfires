LIBRARIES USED IN PYTHON
-----------------------------------

Data Cleaning
---
wildfires_cleaning.ipynb
-
import pandas as pd
import numpy as np

from sklearn.preprocessing import LabelEncoder

---------------
Data Plotting
---
plot.ipynb
-
import pandas as pd
import numpy as np

import matplotlib.pyplot as plt
from matplotlib import style
%matplotlib inline

from sklearn.linear_model import LinearRegression

---------------
Data GroupBy
---
Grouping.ipynb
-
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

---------------
Unsupervised Machine Learning
---
UnSup_Machine.ipynb
-
import pandas as pd

import os
os.environ["MKL_NUM_THREADS"] = "1"

import plotly.express as px
import hvplot.pandas
from sklearn.cluster import KMeans
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.cluster import AgglomerativeClustering
import plotly.figure_factory as ff

---------------
Supervised Machine Learning
---
Sup_Machine_OneHotEncode.ipynb
-
import pandas as pd
import numpy as np
from pathlib import Path

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import OneHotEncoder

from sklearn.metrics import accuracy_score
from sklearn.metrics import balanced_accuracy_score
from sklearn.metrics import confusion_matrix
from imblearn.metrics import classification_report_imbalanced
from sklearn.metrics import classification_report

import warnings
warnings.filterwarnings('ignore')

from collections import Counter

import tensorflow as tf
from sklearn.ensemble import RandomForestClassifier
from imblearn.ensemble import BalancedRandomForestClassifier
from imblearn.ensemble import EasyEnsembleClassifier
from imblearn.over_sampling import RandomOverSampler
from sklearn.linear_model import LogisticRegression
from imblearn.over_sampling import SMOTE
from imblearn.under_sampling import ClusterCentroids
from imblearn.combine import SMOTEENN
from sklearn.ensemble import GradientBoostingClassifier

---------------
Database Creation and Querying
---
fire_database_sql_info.ipynb (in sql_database folder)
-
import pandas as pd
import numpy as np

import sqlalchemy as sql
import psycopg2
import config
from config import db_password
from sqlalchemy import create_engine